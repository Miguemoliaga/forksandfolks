Validating found git in: git
Using git 2.25.1 from git
> git rev-parse --git-dir
Open repository: /opt/odoo/dam
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :README.md
> git ls-files --stage -- /opt/odoo/dam/README.md
> git check-ignore -v -z --stdin
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n21 -- /opt/odoo/dam/README.md
> git log --oneline --cherry master...master@{upstream} --
> git pull --tags odoobueno master
> git ls-files --stage -- /opt/odoo/dam/README.md
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git show --textconv :README.md
From https://github.com/Miguemoliaga/ProyectoEmpresa
 * branch              master     -> FETCH_HEAD
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /opt/odoo/dam/README.md
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git show --textconv :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git rev-list --count 33aca954f78cf999182ea4f1332031c65a9428e8.. -- /opt/odoo/dam/README.md
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n2 -- /opt/odoo/dam/README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git checkout -q -b miguel --no-track HEAD
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/miguel refs/remotes/miguel
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /opt/odoo/dam/README.md
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git show --textconv :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/miguel refs/remotes/miguel
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/miguel refs/remotes/miguel
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git push -u odoobueno miguel
To https://github.com/Miguemoliaga/ProyectoEmpresa.git
 ! [rejected]          miguel -> miguel (fetch first)
error: failed to push some refs to 'https://github.com/Miguemoliaga/ProyectoEmpresa.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
> git log --oneline --cherry miguel...miguel@{upstream} --
fatal: no upstream configured for branch 'miguel'
> git pull --tags
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> miguel
> git ls-files --stage -- /opt/odoo/dam/README.md
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git show --textconv :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/miguel refs/remotes/miguel
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git for-each-ref --format %(refname:short)%00%(upstream:short) refs/heads
> git checkout -q master
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /opt/odoo/dam/README.md
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git show --textconv :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git log --oneline --cherry master...master@{upstream} --
> git pull --tags odoobueno master
From https://github.com/Miguemoliaga/ProyectoEmpresa
 * branch              master     -> FETCH_HEAD
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /opt/odoo/dam/README.md
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git show --textconv :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git rev-list --count 33aca954f78cf999182ea4f1332031c65a9428e8.. -- /opt/odoo/dam/README.md
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n2 -- /opt/odoo/dam/README.md
> git checkout -q miguel
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/miguel refs/remotes/miguel
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /opt/odoo/dam/README.md
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git show --textconv :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/miguel refs/remotes/miguel
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git for-each-ref --format %(refname:short)%00%(upstream:short) refs/heads
> git checkout -q master
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /opt/odoo/dam/README.md
> git cat-file -s e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
> git show --textconv :README.md
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
